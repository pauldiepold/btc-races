-- Neue Enums f端r Wettkampftypen und Meisterschaften
CREATE TYPE "public"."race_type" AS ENUM (
    'track',
    'road'
);

CREATE TYPE "public"."championship_type" AS ENUM (
    'DM',
    'BBM',
    'NDM'
);

-- Neue Felder zur competitions Tabelle hinzuf端gen
ALTER TABLE "public"."competitions"
ADD COLUMN "is_ladv_registration_required" boolean DEFAULT false,
ADD COLUMN "race_type" "public"."race_type",
ADD COLUMN "championship_type" "public"."championship_type";

-- Neue Tabelle f端r Wettkampfdistanzen
CREATE TABLE IF NOT EXISTS "public"."competition_distances" (
    "id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "competition_id" bigint NOT NULL,
    "distance" text NOT NULL,
    "created_at" timestamp with time zone DEFAULT now(),
    "updated_at" timestamp with time zone DEFAULT now(),
    CONSTRAINT "competition_distances_pkey" PRIMARY KEY ("id"),
    CONSTRAINT "competition_distances_competition_id_fkey" FOREIGN KEY ("competition_id") 
        REFERENCES "public"."competitions"("id") ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "competition_distances_competition_id_distance_key" UNIQUE ("competition_id", "distance")
);

-- Trigger f端r updated_at
CREATE TRIGGER update_competition_distances_updated_at
    BEFORE UPDATE ON "public"."competition_distances"
    FOR EACH ROW
    EXECUTE FUNCTION "public"."update_modified_column"();

-- RLS Policies
ALTER TABLE "public"."competition_distances" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable all access for authenticated users only" 
    ON "public"."competition_distances" 
    TO "authenticated" 
    USING (true);

CREATE POLICY "Enable read access for all users" 
    ON "public"."competition_distances" 
    FOR SELECT 
    USING (true);

-- Grants
GRANT ALL ON TABLE "public"."competition_distances" TO "postgres", "anon", "authenticated", "service_role";
GRANT ALL ON SEQUENCE "public"."competition_distances_id_seq" TO "postgres", "anon", "authenticated", "service_role";
