-- Create email_logs table for tracking all email communications
CREATE TABLE "public"."email_logs" (
    "id" BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "registration_id" BIGINT REFERENCES "public"."registrations"("id") ON DELETE CASCADE,
    "email_type" TEXT NOT NULL,
    "recipient_email" TEXT NOT NULL,
    "subject" TEXT NOT NULL,
    "token" TEXT,
    "token_expires_at" TIMESTAMP WITH TIME ZONE,
    "status" TEXT NOT NULL DEFAULT 'pending',
    "sent_at" TIMESTAMP WITH TIME ZONE,
    "error" TEXT,
    "retry_count" INTEGER DEFAULT 0,
    "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now(),
    "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now(),
    PRIMARY KEY ("id")
);

-- Create index for better performance
CREATE INDEX "email_logs_registration_id_idx" ON "public"."email_logs" ("registration_id");
CREATE INDEX "email_logs_token_idx" ON "public"."email_logs" ("token") WHERE "token" IS NOT NULL;
CREATE INDEX "email_logs_status_idx" ON "public"."email_logs" ("status");

-- Trigger for updated_at
CREATE TRIGGER update_email_logs_updated_at
    BEFORE UPDATE ON "public"."email_logs"
    FOR EACH ROW
    EXECUTE FUNCTION "public"."update_modified_column"();

-- Add RLS
ALTER TABLE "public"."email_logs" ENABLE ROW LEVEL SECURITY;

-- RLS policy - only authenticated users (admins) have access
CREATE POLICY "Enable all access for authenticated users only" 
    ON "public"."email_logs" 
    TO "authenticated" 
    USING (true);

-- Grants
GRANT ALL ON TABLE "public"."email_logs" TO "postgres", "service_role";
GRANT USAGE ON SEQUENCE "public"."email_logs_id_seq" TO "postgres", "service_role";
